openapi: 3.0.1
info:
  title: Climbing-day-member-swagger API Documentation
  description: Spring REST Docs with SwaggerUI
  version: 0.0.1
servers:
- url: http://localhost:8080
tags: []
paths:
  /v1/member/login:
    post:
      tags:
      - 회원 API
      summary: 로그인
      description: 로그인
      operationId: '로그인 API - '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1-member-login965174184'
            examples:
              '로그인 API - 실패: 로그인 정보':
                value: "{\"email\":\"test@naver.com\",\"password\":\"a12345!@#@\"}"
              로그인 API - 성공:
                value: "{\"email\":\"test@naver.com\",\"password\":\"a12345!@#\"}"
              '로그인 API - 실패: 필드 유효성':
                value: "{\"email\":\"testnaver.com\",\"password\":\"12345\"}"
      responses:
        "401":
          description: "401"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register-946372771'
              examples:
                '로그인 API - 실패: 로그인 정보':
                  value: "{\"errorCode\":401,\"errorMessage\":\"아이디 또는 비밀번호를 확인해주세\
                    요.\"}"
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-login1698192666'
              examples:
                로그인 API - 성공:
                  value: "{\"code\":200,\"message\":\"정상 처리되었습니다.\",\"data\":{\"accessToken\"\
                    :\"eyJhbGciOiJIUzUxMiJ9.eyJpZCI6Niwic3ViIjoidGVzdEBuYXZlci5jb20iLCJpYXQiOjE3MTg1MDE4NjAsImV4cCI6MTcxODUwMzY2MCwicm9sZXMiOiJST0xFX1VTRVIifQ.z7PuJJ6vQvXPEW71gZkO5Zwk6OJYIMnqlyVRuvJY2rRAiKz_qNgf_Z3Hmb5yzMMdQCh3eSQwWVX8HwI6cgV2Tw\"\
                    ,\"refreshToken\":\"eyJhbGciOiJIUzUxMiJ9.eyJpZCI6Niwic3ViIjoidGVzdEBuYXZlci5jb20iLCJpYXQiOjE3MTg1MDE4NjAsImV4cCI6MTcxODU4ODI2MCwicm9sZXMiOiJST0xFX1VTRVIifQ.FG7ac-loqkPNMBxB3ABs5GAjdmhXOJCHF-gicTurNc-gkwrmVjcy5qXj1AkIK-1i5OKeuUZTTD2nOkHeTwoyUg\"\
                    }}"
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register-1534697879'
              examples:
                '로그인 API - 실패: 필드 유효성':
                  value: "{\"errorCode\":400,\"errorMessage\":\"입력값에 대한 검증에 실패했습니다\
                    .\",\"validation\":{\"password\":\"유효하지 않은 비밀번호 형식입니다.\",\"email\"\
                    :\"유효하지 않은 이메일 형식입니다.\"}}"
  /v1/member/register:
    post:
      tags:
      - 회원 API
      summary: 회원 가입
      description: 회원 가입
      operationId: '회원 API - '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1-member-register-1525415206'
            examples:
              '회원 API - 실패: 필드 유효성':
                value: "{\"email\":\"testnaver.com\",\"nickName\":\"\",\"password\"\
                  :\"12345\",\"passwordConfirm\":\"12345\",\"phoneNumber\":\"0101234-5678\"\
                  ,\"birthDate\":\"200011-11\"}"
              회원 API - 성공:
                value: "{\"email\":\"test@naver.com\",\"nickName\":\"test\",\"password\"\
                  :\"a12345!@#\",\"passwordConfirm\":\"a12345!@#\",\"phoneNumber\"\
                  :\"010-1234-5678\",\"birthDate\":\"2000-11-11\"}"
              '회원 API - 실패: 중복 회원':
                value: "{\"email\":\"test@naver.com\",\"nickName\":\"test\",\"password\"\
                  :\"a12345!@#\",\"passwordConfirm\":\"a12345!@#\",\"phoneNumber\"\
                  :\"010-1234-5678\",\"birthDate\":\"2000-11-11\"}"
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register-1534697879'
              examples:
                '회원 API - 실패: 필드 유효성':
                  value: "{\"errorCode\":400,\"errorMessage\":\"입력값에 대한 검증에 실패했습니다\
                    .\",\"validation\":{\"password\":\"유효하지 않은 비밀번호 형식입니다.\",\"passwordConfirm\"\
                    :\"유효하지 않은 비밀번호 형식입니다.\",\"nickName\":\"닉네임은 2자 이상 8자 이하로 입력해주\
                    세요.\",\"birthDate\":\"생년월일을 올바르게 입력해주세요.\",\"email\":\"유효하지 않은\
                    \ 이메일 형식입니다.\"}}"
        "201":
          description: "201"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register1233141654'
              examples:
                회원 API - 성공:
                  value: "{\"code\":201,\"message\":\"정상적으로 생성되었습니다.\",\"data\":{\"\
                    id\":6}}"
        "409":
          description: "409"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register-946372771'
              examples:
                '회원 API - 실패: 중복 회원':
                  value: "{\"errorCode\":409,\"errorMessage\":\"이미 등록된 회원 이메일입니다.\"\
                    }"
  /v1/member/email/check:
    get:
      tags:
      - 회원 API
      summary: 이메일 중복체크
      description: 이메일 중복체크
      operationId: '이메일 중복체크 API - '
      parameters:
      - name: email
        in: query
        description: 중복 확인할 이메일
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-email-auth-request1575598845'
              examples:
                이메일 중복체크 API - 성공:
                  value: "{\"code\":200,\"message\":\"사용이 가능한 이메일입니다.\"}"
        "409":
          description: "409"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register-946372771'
              examples:
                '이메일 중복체크 API - 실패: 이미 존재하는 이메일':
                  value: "{\"errorCode\":409,\"errorMessage\":\"이미 등록된 회원 이메일입니다.\"\
                    }"
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-phone-num-check-44175865'
              examples:
                '이메일 중복체크 API - 실패: parameter 누락':
                  value: "{\"errorCode\":400,\"errorMessage\":\"파라미터 값이 정상적이지 않습니다\
                    . 확인 후 다시 시도해주세요.\",\"missingParams\":{\"email\":\"email 값이 확인\
                    되지 않습니다.\"}}"
  /v1/member/nick-name/check:
    get:
      tags:
      - 회원 API
      summary: 닉네임 중복체크
      description: 닉네임 중복체크
      operationId: '닉네임 중복체크 API - '
      parameters:
      - name: nickName
        in: query
        description: 중복 확인할 닉네임
        required: false
        schema:
          type: string
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-phone-num-check-44175865'
              examples:
                '닉네임 중복체크 API - 실패: Parameter 누락':
                  value: "{\"errorCode\":400,\"errorMessage\":\"파라미터 값이 정상적이지 않습니다\
                    . 확인 후 다시 시도해주세요.\",\"missingParams\":{\"nickName\":\"nickName\
                    \ 값이 확인되지 않습니다.\"}}"
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-email-auth-request1575598845'
              examples:
                닉네임 중복체크 API - 성공:
                  value: "{\"code\":200,\"message\":\"사용이 가능한 닉네임입니다.\"}"
        "409":
          description: "409"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register-946372771'
              examples:
                '닉네임 중복체크 API - 실패: 이미 존재하는 닉네임':
                  value: "{\"errorCode\":409,\"errorMessage\":\"이미 등록된 닉네임입니다.\"}"
  /v1/member/phone-num/check:
    get:
      tags:
      - 회원 API
      summary: 핸드폰 번호 중복체크
      description: 핸드폰 번호 중복체크
      operationId: '핸드폰 번호 중복체크 API - '
      parameters:
      - name: phoneNum
        in: query
        description: 중복 확인할 핸드폰 번호
        required: false
        schema:
          type: string
      responses:
        "409":
          description: "409"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register-946372771'
              examples:
                '핸드폰 번호 중복체크 API - 실패: 이미 존재하는 휴대폰 번호':
                  value: "{\"errorCode\":409,\"errorMessage\":\"이미 등록된 휴대폰 번호입니다.\"\
                    }"
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-phone-num-check-44175865'
              examples:
                '핸드폰 번호 중복체크 API - 실패: Parameter 누락':
                  value: "{\"errorCode\":400,\"errorMessage\":\"파라미터 값이 정상적이지 않습니다\
                    . 확인 후 다시 시도해주세요.\",\"missingParams\":{\"phoneNum\":\"phoneNum\
                    \ 값이 확인되지 않습니다.\"}}"
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-email-auth-request1575598845'
              examples:
                핸드폰 번호 중복체크 API - 성공:
                  value: "{\"code\":200,\"message\":\"사용이 가능한 전화번호입니다.\"}"
  /v1/member/token/refresh:
    get:
      tags:
      - 회원 API
      summary: 토큰 재발급
      description: 토큰 재발급
      operationId: '토큰 재발급 API - '
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-login1698192666'
              examples:
                토큰 재발급 API - 성공:
                  value: "{\"code\":200,\"message\":\"정상 처리되었습니다.\",\"data\":{\"accessToken\"\
                    :\"eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwic3ViIjoiYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzE4NTAxODY5LCJleHAiOjE3MTg1MDM2NjksInJvbGVzIjoiUk9MRV9BRE1JTiJ9.2vIQR6cowBXRLCSoX-MPEx-F4e1iaVCRRc4yO_nnh9HGoH7syq2mZdc2BQq4s3TUDkBtJetdD9TkBJ06QED1yA\"\
                    ,\"refreshToken\":\"eyJhbGciOiJIUzUxMiJ9.eyJpZCI6MSwic3ViIjoiYWRtaW5AZ21haWwuY29tIiwiaWF0IjoxNzE4NTAxODY5LCJleHAiOjE3MTg1ODgyNjksInJvbGVzIjoiUk9MRV9BRE1JTiJ9.ZQ-uWbjJEqlRtzxitS7a1sbZlQMsls0hhUVapFghIzThE5f_4_K27-XHE1Cnwms4Yk9vnnwqIfEwyJ5typBABw\"\
                    }}"
        "403":
          description: "403"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/v1-member-register-946372771'
              examples:
                '토큰 재발급 API - 실패: 권한 없음':
                  value: "{\"errorCode\": 403, \"errorMessage\": \"접근 권한이 없습니다.\"}"
        "401":
          description: "401"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/v1-member-register-946372771'
              examples:
                '토큰 재발급 API - 실패: 토큰 없음':
                  value: "{\"errorCode\":401,\"errorMessage\":\"토큰이 존재하지 않습니다.\"}"
                '토큰 재발급 API - 실패: 토큰 유효기한 만료':
                  value: "{\"errorCode\":401,\"errorMessage\":\"토큰의 유효기한이 만료되었습니다\
                    .\"}"
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register-946372771'
              examples:
                '토큰 재발급 API - 실패: 리프래시 토큰 불일치':
                  value: "{\"errorCode\":401,\"errorMessage\":\"정상적인 토큰이 아닙니다. 확인\
                    \ 후 다시 시도해주세요.\"}"
      security:
      - bearerAuthJWT: []
  /v1/member/email/auth/confirm:
    post:
      tags:
      - 회원 API
      summary: 이메일 인증 코드 확인
      description: 이메일 인증 코드 확인
      operationId: '이메일 인증 코드 확인 API - '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1-member-email-auth-confirm-278006429'
            examples:
              '이메일 인증 코드 확인 API - 실패: 인증 코드 불일치':
                value: "{\"email\":\"seongo0521@gmail.com\",\"authCode\":\"111111\"\
                  }"
              '이메일 인증 코드 확인 API - 실패: 필드 유효성':
                value: "{\"email\":\"\",\"authCode\":\"\"}"
              '이메일 인증 코드 확인 API - 실패: 인증 코드 요청 필요':
                value: "{\"email\":\"seongo0521@gmail.com\",\"authCode\":\"111111\"\
                  }"
              이메일 인증 코드 확인 API - 성공:
                value: "{\"email\":\"seongo0521@gmail.com\",\"authCode\":\"111111\"\
                  }"
      responses:
        "401":
          description: "401"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register-946372771'
              examples:
                '이메일 인증 코드 확인 API - 실패: 인증 코드 불일치':
                  value: "{\"errorCode\":401,\"errorMessage\":\"인증 코드가 일치하지 않습니다.\"\
                    }"
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register-1534697879'
              examples:
                '이메일 인증 코드 확인 API - 실패: 필드 유효성':
                  value: "{\"errorCode\":400,\"errorMessage\":\"입력값에 대한 검증에 실패했습니다\
                    .\",\"validation\":{\"authCode\":\"인증 코드는 필수 항목입니다.\",\"email\"\
                    :\"이메일은 필수 항목입니다.\"}}"
                '이메일 인증 코드 확인 API - 실패: 인증 코드 요청 필요':
                  value: "{\"errorCode\":400,\"errorMessage\":\"이메일 인증 정보가 확인되지 않습\
                    니다. 확인 후 다시 시도해주세요.\"}"
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-email-auth-request1575598845'
              examples:
                이메일 인증 코드 확인 API - 성공:
                  value: "{\"code\":200,\"message\":\"이메일 인증이 정상적으로 처리되었습니다.\"}"
  /v1/member/email/auth/request:
    post:
      tags:
      - 회원 API
      summary: 이메일 인증 코드 요청
      description: 이메일 인증 코드 요청
      operationId: '이메일 인증 코드 요청 API - '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1-member-email-auth-request371889986'
            examples:
              '이메일 인증 코드 요청 API - 실패: 필드 유효성':
                value: "{\"email\":\"\"}"
              이메일 인증 코드 요청 API - 성공:
                value: "{\"email\":\"seongo0521@gmail.com\"}"
              '이메일 인증 코드 요청 API - 실패: 이메일 서버 이슈':
                value: "{\"email\":\"seongo0521@gmail.com\"}"
              '이메일 인증 코드 요청 API - 실패: 이미 등록 된 이메일':
                value: "{\"email\":\"test@naver.com\"}"
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register-1534697879'
              examples:
                '이메일 인증 코드 요청 API - 실패: 필드 유효성':
                  value: "{\"errorCode\":400,\"errorMessage\":\"입력값에 대한 검증에 실패했습니다\
                    .\",\"validation\":{\"email\":\"이메일은 필수 항목입니다.\"}}"
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-email-auth-request1575598845'
              examples:
                이메일 인증 코드 요청 API - 성공:
                  value: "{\"code\":200,\"message\":\"인증 메일이 정상적으로 발송되었습니다.\"}"
        "504":
          description: "504"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register-946372771'
              examples:
                '이메일 인증 코드 요청 API - 실패: 이메일 서버 이슈':
                  value: "{\"errorCode\":504,\"errorMessage\":\"이메일 전송에 실패했습니다.\"}"
        "409":
          description: "409"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-member-register-946372771'
              examples:
                '이메일 인증 코드 요청 API - 실패: 이미 등록 된 이메일':
                  value: "{\"errorCode\":409,\"errorMessage\":\"이미 등록된 회원 이메일입니다.\"\
                    }"
components:
  schemas:
    v1-member-login1698192666:
      type: object
      properties:
        code:
          type: number
          description: 상태 코드
        data:
          type: object
          properties:
            accessToken:
              type: string
              description: 액세스 토큰
            refreshToken:
              type: string
              description: 리프래쉬 토큰
        message:
          type: string
          description: 상태 메시지
    v1-member-email-auth-request1575598845:
      type: object
      properties:
        code:
          type: number
          description: 상태 코드
        message:
          type: string
          description: 상태 메시지
    v1-member-register1233141654:
      type: object
      properties:
        code:
          type: number
          description: 상태 코드
        data:
          type: object
          properties:
            id:
              type: number
              description: 아이디 고유번호
        message:
          type: string
          description: 상태 메시지
    v1-member-email-auth-request371889986:
      type: object
      properties:
        email:
          type: string
          description: 이메일(계정)
    v1-member-register-946372771:
      type: object
      properties:
        errorMessage:
          type: string
          description: 상태 메시지
        errorCode:
          type: number
          description: 상태 코드
    v1-member-phone-num-check-44175865:
      type: object
      properties:
        errorMessage:
          type: string
          description: 상태 메시지
        missingParams:
          type: object
          description: 누락된 파라미터
        errorCode:
          type: number
          description: 상태 코드
    v1-member-register-1525415206:
      type: object
      properties:
        password:
          type: string
          description: 패스워드
        phoneNumber:
          type: string
          description: 핸드폰 번호
        passwordConfirm:
          type: string
          description: 패스워드 확인
        nickName:
          type: string
          description: 닉네임
        birthDate:
          type: string
          description: 생년월일
        email:
          type: string
          description: 이메일(계정)
    v1-member-email-auth-confirm-278006429:
      type: object
      properties:
        authCode:
          type: string
          description: 인증 코드
        email:
          type: string
          description: 이메일(계정)
    v1-member-register-1534697879:
      type: object
      properties:
        errorMessage:
          type: string
          description: 상태 메시지
        errorCode:
          type: number
          description: 상태 코드
        validation:
          type: object
          description: 유효하지 않은 필드
    v1-member-login965174184:
      type: object
      properties:
        password:
          type: string
          description: 패스워드
        email:
          type: string
          description: 이메일(계정)
  securitySchemes:
    bearerAuthJWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
